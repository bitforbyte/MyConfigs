USER='Ken'
# Colors for the prompt
blue="\033[0;34m"
yellow="\033[0;93m"
white="\033[0;37m"
green="\033[0;32m"

# Brackets needed around non-printable characters in PS1
ps1_blue='\['"$blue"'\]'
ps1_green='\['"$green"'\]'
ps1_white='\['"$white"'\]'

export PATH=$PATH:~/.scripts

# This will show the values while in a git repo
parse_git_branch() {
    gitstatus=`git status 2> /dev/null`
    if [[ `echo $gitstatus | grep "Changes to be committed"` != "" ]]
    then
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ on (\1!!!)/'
    elif [[ `echo $gitstatus | grep "Changes not staged for commit"` != "" ]]
    then
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ on (\1!!)/'
    elif [[ `echo $gitstatus | grep "Untracked"` != "" ]]
    then
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ on (\1!)/'
    elif [[ `echo $gitstatus | grep "nothing to commit"` != "" ]]
    then
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ on (\1)/'
    else
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ on (\1?)/'
    fi
}

# Echo a non-printing color character depending on whether or not the current git branch is the master    
# Does NOT print the branch name                                                                          
# Use the parse_git_branch() function for that.                                                           
parse_git_branch_color() {
    br=$(parse_git_branch)
    if [[ $br == " on (master)" || $br == " on (master!)" || $br == " on (master!!)" || $br == " on (master!!!)" ]]; then
        echo -e "${yellow}"
    else
        echo -e "${green}"
    fi
}

# With color:
export PS1="$ps1_blue"
export PS1+="Ken in $ps1_white[\W]$ps1_blue"
export PS1+="\[\$(parse_git_branch_color)\]\$(parse_git_branch)$ps1_blue:$ps1_white "


